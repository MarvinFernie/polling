"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/samplePolls.ts":
/*!********************************!*\
  !*** ./src/lib/samplePolls.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   samplePolls: function() { return /* binding */ samplePolls; },\n/* harmony export */   seedSamplePolls: function() { return /* binding */ seedSamplePolls; }\n/* harmony export */ });\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./db */ \"(app-pages-browser)/./src/lib/db.ts\");\n\n// These are the exact 3 initial poll questions requested\nconst samplePolls = [\n    {\n        question: \"What was the best bar at Duke?\",\n        options: [\n            \"Shooters\",\n            \"Devines\"\n        ]\n    },\n    {\n        question: \"Does Brittany Brady have a webbed ass?\",\n        options: [\n            \"Yes\",\n            \"No\",\n            \"I don't believe in picking on Babs\"\n        ]\n    },\n    {\n        question: \"What baby will be born first?\",\n        options: [\n            \"Baby Boy Clanon/Throsby\",\n            \"Baby Boy Samuels/Forman\"\n        ]\n    }\n];\n/**\n * Seeds the database with the three initial sample poll questions\n */ async function seedSamplePolls() {\n    try {\n        console.log(\"Starting to seed sample polls...\");\n        // Check if we can connect to Firestore first\n        if (!await checkFirestoreConnection()) {\n            console.error(\"❌ Cannot connect to Firestore. Check your Firebase configuration.\");\n            return false;\n        }\n        let successCount = 0;\n        // Create each poll one at a time\n        for (const poll of samplePolls){\n            try {\n                console.log(\"Creating poll: \".concat(poll.question));\n                const pollId = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.createPoll)({\n                    question: poll.question,\n                    options: poll.options\n                });\n                if (pollId) {\n                    console.log(\"✅ Created poll with ID: \".concat(pollId));\n                    successCount++;\n                } else {\n                    console.error(\"❌ Failed to create poll: \".concat(poll.question));\n                }\n                // Small delay to ensure Firebase operations complete\n                await new Promise((resolve)=>setTimeout(resolve, 1000));\n            } catch (pollError) {\n                console.error('❌ Error creating poll \"'.concat(poll.question, '\":'), pollError);\n            }\n        }\n        if (successCount === samplePolls.length) {\n            console.log(\"✅ All \".concat(successCount, \" sample polls seeded successfully\"));\n            return true;\n        } else {\n            console.log(\"⚠️ Partial success: \".concat(successCount, \" of \").concat(samplePolls.length, \" polls seeded\"));\n            return successCount > 0;\n        }\n    } catch (error) {\n        console.error(\"❌ Error seeding sample polls:\", error);\n        return false;\n    }\n}\n/**\n * Check if we can connect to Firestore\n */ async function checkFirestoreConnection() {\n    try {\n        // Import here to avoid circular dependencies\n        const { db } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./firebase */ \"(app-pages-browser)/./src/lib/firebase.ts\"));\n        if (!db) {\n            console.error(\"Firestore db is not initialized\");\n            return false;\n        }\n        // Try a simple query to see if we can connect\n        const { collection, getDocs, query, limit } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\"));\n        const pollsCollection = collection(db, \"polls\");\n        console.log(\"Testing Firestore connection...\");\n        const testQuery = query(pollsCollection, limit(1));\n        await getDocs(testQuery);\n        console.log(\"✅ Firestore connection successful\");\n        return true;\n    } catch (error) {\n        console.error(\"❌ Firestore connection test failed:\", error);\n        return false;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvc2FtcGxlUG9sbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBRWxDLHlEQUF5RDtBQUNsRCxNQUFNQyxjQUFjO0lBQ3pCO1FBQ0VDLFVBQVU7UUFDVkMsU0FBUztZQUNQO1lBQ0E7U0FDRDtJQUNIO0lBQ0E7UUFDRUQsVUFBVTtRQUNWQyxTQUFTO1lBQ1A7WUFDQTtZQUNBO1NBQ0Q7SUFDSDtJQUNBO1FBQ0VELFVBQVU7UUFDVkMsU0FBUztZQUNQO1lBQ0E7U0FDRDtJQUNIO0NBQ0QsQ0FBQztBQUVGOztDQUVDLEdBQ00sZUFBZUM7SUFDcEIsSUFBSTtRQUNGQyxRQUFRQyxHQUFHLENBQUM7UUFFWiw2Q0FBNkM7UUFDN0MsSUFBSSxDQUFDLE1BQU1DLDRCQUE0QjtZQUNyQ0YsUUFBUUcsS0FBSyxDQUFDO1lBQ2QsT0FBTztRQUNUO1FBRUEsSUFBSUMsZUFBZTtRQUVuQixpQ0FBaUM7UUFDakMsS0FBSyxNQUFNQyxRQUFRVCxZQUFhO1lBQzlCLElBQUk7Z0JBQ0ZJLFFBQVFDLEdBQUcsQ0FBQyxrQkFBZ0MsT0FBZEksS0FBS1IsUUFBUTtnQkFFM0MsTUFBTVMsU0FBUyxNQUFNWCwrQ0FBVUEsQ0FBQztvQkFDOUJFLFVBQVVRLEtBQUtSLFFBQVE7b0JBQ3ZCQyxTQUFTTyxLQUFLUCxPQUFPO2dCQUN2QjtnQkFFQSxJQUFJUSxRQUFRO29CQUNWTixRQUFRQyxHQUFHLENBQUMsMkJBQWtDLE9BQVBLO29CQUN2Q0Y7Z0JBQ0YsT0FBTztvQkFDTEosUUFBUUcsS0FBSyxDQUFDLDRCQUEwQyxPQUFkRSxLQUFLUixRQUFRO2dCQUN6RDtnQkFFQSxxREFBcUQ7Z0JBQ3JELE1BQU0sSUFBSVUsUUFBUUMsQ0FBQUEsVUFBV0MsV0FBV0QsU0FBUztZQUNuRCxFQUFFLE9BQU9FLFdBQVc7Z0JBQ2xCVixRQUFRRyxLQUFLLENBQUMsMEJBQXdDLE9BQWRFLEtBQUtSLFFBQVEsRUFBQyxPQUFLYTtZQUM3RDtRQUNGO1FBRUEsSUFBSU4saUJBQWlCUixZQUFZZSxNQUFNLEVBQUU7WUFDdkNYLFFBQVFDLEdBQUcsQ0FBQyxTQUFzQixPQUFiRyxjQUFhO1lBQ2xDLE9BQU87UUFDVCxPQUFPO1lBQ0xKLFFBQVFDLEdBQUcsQ0FBQyx1QkFBMENMLE9BQW5CUSxjQUFhLFFBQXlCLE9BQW5CUixZQUFZZSxNQUFNLEVBQUM7WUFDekUsT0FBT1AsZUFBZTtRQUN4QjtJQUNGLEVBQUUsT0FBT0QsT0FBTztRQUNkSCxRQUFRRyxLQUFLLENBQUMsaUNBQWlDQTtRQUMvQyxPQUFPO0lBQ1Q7QUFDRjtBQUVBOztDQUVDLEdBQ0QsZUFBZUQ7SUFDYixJQUFJO1FBQ0YsNkNBQTZDO1FBQzdDLE1BQU0sRUFBRVUsRUFBRSxFQUFFLEdBQUcsTUFBTSxtSkFBTztRQUU1QixJQUFJLENBQUNBLElBQUk7WUFDUFosUUFBUUcsS0FBSyxDQUFDO1lBQ2QsT0FBTztRQUNUO1FBRUEsOENBQThDO1FBQzlDLE1BQU0sRUFBRVUsVUFBVSxFQUFFQyxPQUFPLEVBQUVDLEtBQUssRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTSw2TEFBTztRQUMzRCxNQUFNQyxrQkFBa0JKLFdBQVdELElBQUk7UUFFdkNaLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE1BQU1pQixZQUFZSCxNQUFNRSxpQkFBaUJELE1BQU07UUFDL0MsTUFBTUYsUUFBUUk7UUFFZGxCLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE9BQU87SUFDVCxFQUFFLE9BQU9FLE9BQU87UUFDZEgsUUFBUUcsS0FBSyxDQUFDLHVDQUF1Q0E7UUFDckQsT0FBTztJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9zYW1wbGVQb2xscy50cz9mYmJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVBvbGwgfSBmcm9tICcuL2RiJztcblxuLy8gVGhlc2UgYXJlIHRoZSBleGFjdCAzIGluaXRpYWwgcG9sbCBxdWVzdGlvbnMgcmVxdWVzdGVkXG5leHBvcnQgY29uc3Qgc2FtcGxlUG9sbHMgPSBbXG4gIHtcbiAgICBxdWVzdGlvbjogJ1doYXQgd2FzIHRoZSBiZXN0IGJhciBhdCBEdWtlPycsXG4gICAgb3B0aW9uczogW1xuICAgICAgJ1Nob290ZXJzJyxcbiAgICAgICdEZXZpbmVzJ1xuICAgIF1cbiAgfSxcbiAge1xuICAgIHF1ZXN0aW9uOiAnRG9lcyBCcml0dGFueSBCcmFkeSBoYXZlIGEgd2ViYmVkIGFzcz8nLFxuICAgIG9wdGlvbnM6IFtcbiAgICAgICdZZXMnLFxuICAgICAgJ05vJyxcbiAgICAgICdJIGRvblxcJ3QgYmVsaWV2ZSBpbiBwaWNraW5nIG9uIEJhYnMnXG4gICAgXVxuICB9LFxuICB7XG4gICAgcXVlc3Rpb246ICdXaGF0IGJhYnkgd2lsbCBiZSBib3JuIGZpcnN0PycsXG4gICAgb3B0aW9uczogW1xuICAgICAgJ0JhYnkgQm95IENsYW5vbi9UaHJvc2J5JyxcbiAgICAgICdCYWJ5IEJveSBTYW11ZWxzL0Zvcm1hbidcbiAgICBdXG4gIH1cbl07XG5cbi8qKlxuICogU2VlZHMgdGhlIGRhdGFiYXNlIHdpdGggdGhlIHRocmVlIGluaXRpYWwgc2FtcGxlIHBvbGwgcXVlc3Rpb25zXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZWVkU2FtcGxlUG9sbHMoKSB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ1N0YXJ0aW5nIHRvIHNlZWQgc2FtcGxlIHBvbGxzLi4uJyk7XG4gICAgXG4gICAgLy8gQ2hlY2sgaWYgd2UgY2FuIGNvbm5lY3QgdG8gRmlyZXN0b3JlIGZpcnN0XG4gICAgaWYgKCFhd2FpdCBjaGVja0ZpcmVzdG9yZUNvbm5lY3Rpb24oKSkge1xuICAgICAgY29uc29sZS5lcnJvcign4p2MIENhbm5vdCBjb25uZWN0IHRvIEZpcmVzdG9yZS4gQ2hlY2sgeW91ciBGaXJlYmFzZSBjb25maWd1cmF0aW9uLicpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBcbiAgICBsZXQgc3VjY2Vzc0NvdW50ID0gMDtcbiAgICBcbiAgICAvLyBDcmVhdGUgZWFjaCBwb2xsIG9uZSBhdCBhIHRpbWVcbiAgICBmb3IgKGNvbnN0IHBvbGwgb2Ygc2FtcGxlUG9sbHMpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBDcmVhdGluZyBwb2xsOiAke3BvbGwucXVlc3Rpb259YCk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBwb2xsSWQgPSBhd2FpdCBjcmVhdGVQb2xsKHtcbiAgICAgICAgICBxdWVzdGlvbjogcG9sbC5xdWVzdGlvbixcbiAgICAgICAgICBvcHRpb25zOiBwb2xsLm9wdGlvbnNcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBpZiAocG9sbElkKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coYOKchSBDcmVhdGVkIHBvbGwgd2l0aCBJRDogJHtwb2xsSWR9YCk7XG4gICAgICAgICAgc3VjY2Vzc0NvdW50Kys7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihg4p2MIEZhaWxlZCB0byBjcmVhdGUgcG9sbDogJHtwb2xsLnF1ZXN0aW9ufWApO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBTbWFsbCBkZWxheSB0byBlbnN1cmUgRmlyZWJhc2Ugb3BlcmF0aW9ucyBjb21wbGV0ZVxuICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTAwMCkpO1xuICAgICAgfSBjYXRjaCAocG9sbEVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYOKdjCBFcnJvciBjcmVhdGluZyBwb2xsIFwiJHtwb2xsLnF1ZXN0aW9ufVwiOmAsIHBvbGxFcnJvcik7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGlmIChzdWNjZXNzQ291bnQgPT09IHNhbXBsZVBvbGxzLmxlbmd0aCkge1xuICAgICAgY29uc29sZS5sb2coYOKchSBBbGwgJHtzdWNjZXNzQ291bnR9IHNhbXBsZSBwb2xscyBzZWVkZWQgc3VjY2Vzc2Z1bGx5YCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coYOKaoO+4jyBQYXJ0aWFsIHN1Y2Nlc3M6ICR7c3VjY2Vzc0NvdW50fSBvZiAke3NhbXBsZVBvbGxzLmxlbmd0aH0gcG9sbHMgc2VlZGVkYCk7XG4gICAgICByZXR1cm4gc3VjY2Vzc0NvdW50ID4gMDtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcign4p2MIEVycm9yIHNlZWRpbmcgc2FtcGxlIHBvbGxzOicsIGVycm9yKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuLyoqXG4gKiBDaGVjayBpZiB3ZSBjYW4gY29ubmVjdCB0byBGaXJlc3RvcmVcbiAqL1xuYXN5bmMgZnVuY3Rpb24gY2hlY2tGaXJlc3RvcmVDb25uZWN0aW9uKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICB0cnkge1xuICAgIC8vIEltcG9ydCBoZXJlIHRvIGF2b2lkIGNpcmN1bGFyIGRlcGVuZGVuY2llc1xuICAgIGNvbnN0IHsgZGIgfSA9IGF3YWl0IGltcG9ydCgnLi9maXJlYmFzZScpO1xuICAgIFxuICAgIGlmICghZGIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZpcmVzdG9yZSBkYiBpcyBub3QgaW5pdGlhbGl6ZWQnKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgXG4gICAgLy8gVHJ5IGEgc2ltcGxlIHF1ZXJ5IHRvIHNlZSBpZiB3ZSBjYW4gY29ubmVjdFxuICAgIGNvbnN0IHsgY29sbGVjdGlvbiwgZ2V0RG9jcywgcXVlcnksIGxpbWl0IH0gPSBhd2FpdCBpbXBvcnQoJ2ZpcmViYXNlL2ZpcmVzdG9yZScpO1xuICAgIGNvbnN0IHBvbGxzQ29sbGVjdGlvbiA9IGNvbGxlY3Rpb24oZGIsICdwb2xscycpO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCdUZXN0aW5nIEZpcmVzdG9yZSBjb25uZWN0aW9uLi4uJyk7XG4gICAgY29uc3QgdGVzdFF1ZXJ5ID0gcXVlcnkocG9sbHNDb2xsZWN0aW9uLCBsaW1pdCgxKSk7XG4gICAgYXdhaXQgZ2V0RG9jcyh0ZXN0UXVlcnkpO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCfinIUgRmlyZXN0b3JlIGNvbm5lY3Rpb24gc3VjY2Vzc2Z1bCcpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBGaXJlc3RvcmUgY29ubmVjdGlvbiB0ZXN0IGZhaWxlZDonLCBlcnJvcik7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59Il0sIm5hbWVzIjpbImNyZWF0ZVBvbGwiLCJzYW1wbGVQb2xscyIsInF1ZXN0aW9uIiwib3B0aW9ucyIsInNlZWRTYW1wbGVQb2xscyIsImNvbnNvbGUiLCJsb2ciLCJjaGVja0ZpcmVzdG9yZUNvbm5lY3Rpb24iLCJlcnJvciIsInN1Y2Nlc3NDb3VudCIsInBvbGwiLCJwb2xsSWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJwb2xsRXJyb3IiLCJsZW5ndGgiLCJkYiIsImNvbGxlY3Rpb24iLCJnZXREb2NzIiwicXVlcnkiLCJsaW1pdCIsInBvbGxzQ29sbGVjdGlvbiIsInRlc3RRdWVyeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/samplePolls.ts\n"));

/***/ })

});